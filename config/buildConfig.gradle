//构建类型
//通过apply from '路径'
// 在别的gradle中引入，会替换对应的配置
//如果在宿主gradle中有配置某一属性是覆盖不了的
//
ext {
    android {
        compileSdkVersion rootProject.compileSdkVersion
        buildToolsVersion rootProject.buildToolsVersion
        defaultConfig {
            minSdkVersion rootProject.minSdkVersion
            targetSdkVersion rootProject.targetSdkVersion
        }
        buildTypes {
            debug {
                buildConfigField("boolean", "LOG_DEBUG", "true")
                minifyEnabled false
                signingConfig signingConfigs.debug

            }
            release {
                buildConfigField("boolean", "LOG_DEBUG", "false")
                minifyEnabled true
                zipAlignEnabled true
                //移除无用的resource文件
                shrinkResources true
                proguardFiles getDefaultProguardFile("proguard-android.txt"), "base_proguard-rules.pro", "proguard-rules.pro"
                signingConfig signingConfigs.debug
                // 批量打包
                applicationVariants.all { variant ->
                    variant.outputs.each { output ->
                        def outputFile = output.outputFile
                        if (outputFile != null && outputFile.name.endsWith('.apk')) {
                            //输出apk名称为：渠道名_版本名_时间.apk
                            def fileName = "${variant.productFlavors[0].name}_v${defaultConfig.versionName}_${defaultConfig.versionCode}_${releaseTime()}.apk"
//                            String outputsPath=outputFile.parent.substring(0,outputFile.name.indexOf("apk"));
//                            //outputs+渠道名 组成的目录
//                            File newOutfileDir=new File(outputsPath,"${variant.productFlavors[0].name}");
//                            if(newOutfileDir.exists()){
//                                newOutfileDir.delete();
//                            }
//                            newOutfileDir.mkdirs();
//                            //apk位置 outputs/渠道名/xxx.apk
//                            output.outputFile = new File(newOutfileDir, fileName);
//                            String channelName="${variant.productFlavors[0].name}";
                            output.outputFile = new File(outputFile.parent, fileName)
                        }
                    }
                }
            }
        }
        //签名信息
        signingConfigs {
            debug {
                storeFile file("key/huoapp_key.jks")
                storePassword "huoapp"
                keyAlias "huoshu"
                keyPassword "huoapp"
                v2SigningEnabled false
            }
            release {
                v2SigningEnabled false
            }
        }
        //移除lint检测的error
        lintOptions {
            abortOnError false
        }
    }
}

def releaseTime() {
    return new Date().format("yyyy-MM-dd", TimeZone.getTimeZone("UTC"))
}